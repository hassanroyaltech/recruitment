import {
  CreateSetupsJobMajors,
  DeleteSetupsJobMajor,
  GetAllSetupsJobMajors,
  GetSetupsJobMajorsById,
  UpdateSetupsJobMajors,
  CreateSetupsJobTypes,
  DeleteSetupsJobType,
  GetAllSetupsJobTypes,
  GetSetupsJobTypesById,
  UpdateSetupsJobTypes,
  CreateSetupsIndustries,
  UpdateSetupsIndustries,
  GetSetupsIndustriesById,
  GetAllSetupsIndustries,
  DeleteSetupsIndustry,
  UpdateSetupsCareerLevels,
  CreateSetupsCareerLevels,
  GetSetupsCareerLevelsById,
  GetAllSetupsCareerLevels,
  DeleteSetupsCareerLevel,
  CreateSetupsContractTypes,
  DeleteSetupsContractType,
  GetAllSetupsContractTypes,
  getSetupsContractTypesById,
  UpdateSetupsContractTypes,
  CreateSetupsJobTargetTypes,
  DeleteSetupsJobTargetType,
  GetAllSetupsJobTargetTypes,
  GetSetupsJobTargetTypeById,
  UpdateSetupsJobTargetTypes,
  UpdateSetupsTaskStatus,
  CreateSetupsTaskStatus,
  GetSetupsTaskStatusById,
  GetAllSetupsTaskStatuses,
  DeleteSetupsTaskStatus,
  UpdateSetupsIntegrationsForPartner,
  CreateSetupsIntegrationsForPartner,
  GetSetupsIntegrationsForPartnerById,
  GetAllSetupsIntegrationsForPartner,
  DeleteSetupsIntegrationsForPartner,
  GetAllSetupsJobDepartments,
  UpdateSetupsJobDepartment,
  CreateSetupsJobDepartment,
  GetSetupsJobDepartmentById,
  DeleteSetupsJobDepartment,
} from '../../../../services';
import { LookupsImportEnum, PartnersLookupsEnum, TablesNameEnum } from '../../../../enums';
import { CareerLevelSection } from '../../personal-setups/work-classification/sections/CareerLevel.Section';

import LookupsComponent from '../components/lookups/Lookups.Component';
import {
  CreateSetupsTaskType,
  DeleteSetupsTaskType,
  GetAllSetupsTaskType,
  GetSetupsTaskTypeById,
  UpdateSetupsTaskType,
} from '../../../../services/TaskTypes.Services';

export const WorkClassificationsTabs = [
  {
    label: 'job-majors',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 1,
        label: 'job-majors',
        valueSingle: 'job-major',
        feature_name: TablesNameEnum.JobMajors.key,
        updateAPI: UpdateSetupsJobMajors,
        createAPI: CreateSetupsJobMajors,
        viewAPI: GetSetupsJobMajorsById,
        listAPI: GetAllSetupsJobMajors,
        deleteAPI: DeleteSetupsJobMajor,
        importEnumItem: LookupsImportEnum.job_major,
      },
    },
  },
  {
    label: 'job-types',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 2,
        label: 'job-types',
        valueSingle: 'job-type',
        feature_name: TablesNameEnum.JobTypes.key,
        updateAPI: UpdateSetupsJobTypes,
        createAPI: CreateSetupsJobTypes,
        viewAPI: GetSetupsJobTypesById,
        listAPI: GetAllSetupsJobTypes,
        deleteAPI: DeleteSetupsJobType,
        importEnumItem: LookupsImportEnum.job_type,
      },
    },
  },
  {
    label: 'career-levels',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 3,
        label: 'career-levels',
        valueSingle: 'career-level',
        feature_name: TablesNameEnum.CareerLevel.key,
        updateAPI: UpdateSetupsCareerLevels,
        createAPI: CreateSetupsCareerLevels,
        viewAPI: GetSetupsCareerLevelsById,
        listAPI: GetAllSetupsCareerLevels,
        deleteAPI: DeleteSetupsCareerLevel,
        importEnumItem: LookupsImportEnum.career_level,
      },
      dynamicComponent: true,
      Section: CareerLevelSection,
    },
  },
  {
    label: 'industries',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 4,
        label: 'industries',
        valueSingle: 'industry',
        feature_name: TablesNameEnum.Industries.key,
        updateAPI: UpdateSetupsIndustries,
        createAPI: CreateSetupsIndustries,
        viewAPI: GetSetupsIndustriesById,
        listAPI: GetAllSetupsIndustries,
        deleteAPI: DeleteSetupsIndustry,
        importEnumItem: LookupsImportEnum.industry,
      },
    },
  },
  {
    label: 'contract-types',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 5,
        label: 'contract-types',
        valueSingle: 'contract-type',
        feature_name: TablesNameEnum.ContractTypes.key,
        updateAPI: UpdateSetupsContractTypes,
        createAPI: CreateSetupsContractTypes,
        viewAPI: getSetupsContractTypesById,
        listAPI: GetAllSetupsContractTypes,
        deleteAPI: DeleteSetupsContractType,
        importEnumItem: LookupsImportEnum.contract_type,
      },
    },
  },
  {
    label: 'job-target-types',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 6,
        label: 'job-target-types',
        valueSingle: 'job-target-type',
        feature_name: TablesNameEnum.JobTargetTypes.key,
        updateAPI: UpdateSetupsJobTargetTypes,
        createAPI: CreateSetupsJobTargetTypes,
        viewAPI: GetSetupsJobTargetTypeById,
        listAPI: GetAllSetupsJobTargetTypes,
        deleteAPI: DeleteSetupsJobTargetType,
        importEnumItem: LookupsImportEnum.job_target,
      },
    },
  },
  {
    label: 'task-types',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 7,
        label: 'task-types',
        valueSingle: 'task-type',
        feature_name: TablesNameEnum.TaskType.key,
        updateAPI: UpdateSetupsTaskType,
        createAPI: CreateSetupsTaskType,
        viewAPI: GetSetupsTaskTypeById,
        listAPI: GetAllSetupsTaskType,
        deleteAPI: DeleteSetupsTaskType,
        importEnumItem: LookupsImportEnum.task_type,
      },
    },
  },
  {
    label: 'task-statuses',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 8,
        label: 'task-statuses',
        valueSingle: 'task-status',
        feature_name: TablesNameEnum.TaskStatus.key,
        updateAPI: UpdateSetupsTaskStatus,
        createAPI: CreateSetupsTaskStatus,
        viewAPI: GetSetupsTaskStatusById,
        listAPI: GetAllSetupsTaskStatuses,
        deleteAPI: DeleteSetupsTaskStatus,
        importEnumItem: LookupsImportEnum.task_status,
      },
    },
  },
  {
    label: 'job-departments',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 9,
        label: 'job-departments',
        valueSingle: 'job-department',
        feature_name: TablesNameEnum.JobDepartments.key,
        updateAPI: UpdateSetupsJobDepartment,
        createAPI: CreateSetupsJobDepartment,
        viewAPI: GetSetupsJobDepartmentById,
        listAPI: GetAllSetupsJobDepartments,
        deleteAPI: DeleteSetupsJobDepartment,
        importEnumItem: LookupsImportEnum.job_department,
      },
    },
  },
  {
    label: 'departments',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 10,
        label: 'departments',
        valueSingle: 'department',
        // isWithLocalTranslation: true,
        isWithoutEncryption: true,
        extraParams: {
          lookup: PartnersLookupsEnum.Departments.key,
        },
        controlledTableColumns: {
          default_columns: {
            code: 'code',
            'name.en': 'name-en',
            'name.ar': 'name-ar',
            'name.tr': 'name-tr',
            'name.ro': 'name-ro',
            'name.el': 'name-el',
            'name.fr': 'name-fr',
            'name.sp': 'name-sp',
            'name.du': 'name-du',
            'name.de': 'name-de',
            status: 'status',
            created_at: 'created-at',
            updated_at: 'updated-at',
          },
          columns: [
            'code',
            'name.en',
            'name.ar',
            'status',
            'created_at',
            'updated_at',
          ],
          options: {
            view: [
              {
                type: 2,
                key: 'status',
                has_access: 'true',
                end_point: `${process.env.REACT_APP_INTEGRATIONS_API}/integrations/lookup/status`,
                switchExtraBody: {
                  lookup: PartnersLookupsEnum.Departments.key,
                },
                method: 'put',
                primary_key: 'uuid',
              },
            ],
          },
        },
        // feature_name: TablesNameEnum.Salutation.key,
        updateAPI: UpdateSetupsIntegrationsForPartner,
        createAPI: CreateSetupsIntegrationsForPartner,
        viewAPI: GetSetupsIntegrationsForPartnerById,
        listAPI: GetAllSetupsIntegrationsForPartner,
        deleteAPI: DeleteSetupsIntegrationsForPartner,
      },
    },
  },
  {
    label: 'outsourcing-companies',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 11,
        label: 'outsourcing-companies',
        valueSingle: 'outsourcing-company',
        isWithLocalTranslation: true,
        isWithoutEncryption: true,
        extraParams: {
          lookup: PartnersLookupsEnum.OutsourcingCompanies.key,
        },
        controlledTableColumns: {
          default_columns: {
            code: 'code',
            'name.en': 'name-en',
            'name.ar': 'name-ar',
            'name.tr': 'name-tr',
            'name.ro': 'name-ro',
            'name.el': 'name-el',
            'name.fr': 'name-fr',
            'name.sp': 'name-sp',
            'name.du': 'name-du',
            'name.de': 'name-de',
            status: 'status',
            created_at: 'created-at',
            updated_at: 'updated-at',
          },
          columns: [
            'code',
            'name.en',
            'name.ar',
            'status',
            'created_at',
            'updated_at',
          ],
          options: {
            view: [
              {
                type: 2,
                key: 'status',
                has_access: 'true',
                end_point: `${process.env.REACT_APP_INTEGRATIONS_API}/integrations/lookup/status`,
                switchExtraBody: {
                  lookup: PartnersLookupsEnum.OutsourcingCompanies.key,
                },
                method: 'put',
                primary_key: 'uuid',
              },
            ],
          },
        },
        // feature_name: TablesNameEnum.Salutation.key,
        updateAPI: UpdateSetupsIntegrationsForPartner,
        createAPI: CreateSetupsIntegrationsForPartner,
        viewAPI: GetSetupsIntegrationsForPartnerById,
        listAPI: GetAllSetupsIntegrationsForPartner,
        deleteAPI: DeleteSetupsIntegrationsForPartner,
      },
    },
  },
];

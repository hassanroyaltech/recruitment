import {
  CreateSetupsDocumentTypes,
  DeleteSetupsDocumentType,
  GetAllSetupsDocumentTypes,
  getSetupsDocumentTypesById,
  UpdateSetupsDocumentTypes,
  CreateSetupsMaritalStatus,
  DeleteSetupsMaritalStatus,
  GetAllSetupsMaritalStatus,
  getSetupsMaritalStatusById,
  UpdateSetupsMaritalStatus,
  CreateSetupsRelativeTypes,
  DeleteSetupsRelativeType,
  GetAllSetupsRelativeTypes,
  getSetupsRelativeTypesById,
  UpdateSetupsRelativeTypes,
  CreateSetupsNationality,
  DeleteSetupsNationality,
  GetAllSetupsNationality,
  getSetupsNationalityById,
  UpdateSetupsNationality,
  CreateSetupsCountries,
  DeleteSetupsCountry,
  GetAllSetupsCountries,
  getSetupsCountriesById,
  UpdateSetupsCountries,
  CreateSetupsReligions,
  DeleteSetupsReligion,
  GetAllSetupsReligions,
  getSetupsReligionsById,
  UpdateSetupsReligions,
  CreateSetupsCities,
  DeleteSetupsCity,
  GetAllSetupsCities,
  getSetupsCitiesById,
  UpdateSetupsCities,
  CreateSetupsRegions,
  DeleteSetupsRegion,
  GetAllSetupsRegions,
  getSetupsRegionsById,
  UpdateSetupsRegions,
  CreateSetupsLanguages,
  DeleteSetupsLanguage,
  GetAllSetupsLanguages,
  getSetupsLanguagesById,
  UpdateSetupsLanguages,
  CreateSetupsAssetTypes,
  DeleteSetupsAssetType,
  GetAllSetupsAssetTypes,
  getSetupsAssetTypesById,
  UpdateSetupsAssetTypes,
  CreateSetupsRelationships,
  DeleteSetupsRelationship,
  GetAllSetupsRelationships,
  getSetupsRelationshipsById,
  UpdateSetupsRelationships,
  CreateSetupsCurrencies,
  DeleteSetupsCurrency,
  GetAllSetupsCurrencies,
  GetSetupsCurrenciesById,
  UpdateSetupsCurrencies,
  CreateSetupsGender,
  getSetupsGenderById,
  UpdateSetupsGender,
  DeleteSetupsGender,
  GetAllSetupsGender,
  GetAllSetupsCitizenship,
  DeleteSetupsCitizenship,
  getSetupsCitizenshipById,
  CreateSetupsCitizenship,
  UpdateSetupsCitizenship,
  GetAllSetupsPriority,
  getSetupsPriorityById,
  CreateSetupsPriority,
  UpdateSetupsPriority,
  DeleteSetupsPriority,
  GetAllSetupsBloodType,
  GetSetupsBloodTypeById,
  CreateSetupsBloodType,
  UpdateSetupsBloodType,
  DeleteSetupsBloodType,
  GetAllSetupsDisability,
  GetSetupsDisabilityById,
  CreateSetupsDisability,
  UpdateSetupsDisability,
  DeleteSetupsDisability,
  GetAllSetupsStudents,
  GetSetupsStudentsById,
  CreateSetupsStudents,
  UpdateSetupsStudents,
  DeleteSetupsStudents,
  GetAllSetupsHRDF,
  GetSetupsHRDFById,
  CreateSetupsHRDF,
  UpdateSetupsHRDF,
  DeleteSetupsHRDF,
  GetAllSetupsProbationPeriod,
  GetSetupsProbationPeriodById,
  CreateSetupsProbationPeriod,
  UpdateSetupsProbationPeriod,
  DeleteSetupsProbationPeriod,
  GetAllSetupsNoticePeriod,
  GetSetupsNoticePeriodById,
  CreateSetupsNoticePeriod,
  UpdateSetupsNoticePeriod,
  DeleteSetupsNoticePeriod,
  GetAllSetupsGOSI,
  GetSetupsGOSIById,
  CreateSetupsGOSI,
  UpdateSetupsGOSI,
  DeleteSetupsGOSI,
  GetAllSetupsAnnuities,
  GetSetupsAnnuitiesById,
  CreateSetupsAnnuities,
  UpdateSetupsAnnuities,
  DeleteSetupsAnnuities,
  GetAllSetupsHazards,
  GetSetupsHazardsById,
  CreateSetupsHazards,
  UpdateSetupsHazards,
  DeleteSetupsHazards,
  GetAllSetupsResidencyStatus,
  GetSetupsResidencyStatusById,
  CreateSetupsResidencyStatus,
  UpdateSetupsResidencyStatus,
  DeleteSetupsResidencyStatus,
  UpdateSetupsSalutation,
  CreateSetupsSalutation,
  GetSetupsSalutationById,
  GetAllSetupsSalutation,
  DeleteSetupsSalutation,
  UpdateSetupsLocations,
  CreateSetupsLocations,
  getSetupsLocationsById,
  GetAllSetupsLocations,
  DeleteSetupsLocation,
} from '../../../../services';
import { LookupsImportEnum, TablesNameEnum } from '../../../../enums';
import { onlyEnglishSmall } from '../../../../utils';
import { PersonalClassificationPermissions } from '../../../../permissions/setups/data/PersonalClassification.Permissions';
import LookupsComponent from '../components/lookups/Lookups.Component';

export const PersonalClassificationsTabs = [
  {
    label: 'regions',
    component: LookupsComponent,
    defaultPermissions: PersonalClassificationPermissions.RegionsPermissions,
    props: {
      lookup: {
        key: 1,
        label: 'regions',
        valueSingle: 'region',
        feature_name: TablesNameEnum.Regions.key,
        updateAPI: UpdateSetupsRegions,
        createAPI: CreateSetupsRegions,
        viewAPI: getSetupsRegionsById,
        listAPI: GetAllSetupsRegions,
        deleteAPI: DeleteSetupsRegion,
        importEnumItem: LookupsImportEnum.regions,
      },
    },
  },
  {
    label: 'countries',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 2,
        label: 'countries',
        valueSingle: 'country',
        feature_name: TablesNameEnum.Countries.key,
        parentKey: 'region_uuid',
        parentAPI: GetAllSetupsRegions,
        parentByIdAPI: getSetupsRegionsById,
        parentTitle: 'region',
        titleKey: 'name',
        updateAPI: UpdateSetupsCountries,
        createAPI: CreateSetupsCountries,
        viewAPI: getSetupsCountriesById,
        listAPI: GetAllSetupsCountries,
        deleteAPI: DeleteSetupsCountry,
        importEnumItem: LookupsImportEnum.personnel_country,
      },
    },
  },
  {
    label: 'locations',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 3,
        label: 'locations',
        valueSingle: 'location',
        feature_name: TablesNameEnum.Locations.key,
        titleKey: 'name',
        updateAPI: UpdateSetupsLocations,
        createAPI: CreateSetupsLocations,
        viewAPI: getSetupsLocationsById,
        listAPI: GetAllSetupsLocations,
        deleteAPI: DeleteSetupsLocation,
        importEnumItem: LookupsImportEnum.personnel_location,
      },
    },
  },
  {
    label: 'cities',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 4,
        label: 'cities',
        valueSingle: 'city',
        feature_name: TablesNameEnum.Cities.key,
        parentKey: 'country_uuid',
        parentAPI: GetAllSetupsCountries,
        parentByIdAPI: getSetupsCountriesById,
        parentTitle: 'country',
        titleKey: 'name',
        updateAPI: UpdateSetupsCities,
        createAPI: CreateSetupsCities,
        viewAPI: getSetupsCitiesById,
        listAPI: GetAllSetupsCities,
        deleteAPI: DeleteSetupsCity,
        importEnumItem: LookupsImportEnum.city,
      },
    },
  },
  {
    label: 'nationalities',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 5,
        label: 'nationalities',
        valueSingle: 'nationality',
        feature_name: TablesNameEnum.PersonnelNationalities.key,
        updateAPI: UpdateSetupsNationality,
        createAPI: CreateSetupsNationality,
        viewAPI: getSetupsNationalityById,
        listAPI: GetAllSetupsNationality,
        deleteAPI: DeleteSetupsNationality,
        importEnumItem: LookupsImportEnum.nationality,
      },
    },
  },
  {
    label: 'religions',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 6,
        label: 'religions',
        valueSingle: 'religion',
        feature_name: TablesNameEnum.PersonnelReligions.key,
        updateAPI: UpdateSetupsReligions,
        createAPI: CreateSetupsReligions,
        viewAPI: getSetupsReligionsById,
        listAPI: GetAllSetupsReligions,
        deleteAPI: DeleteSetupsReligion,
        importEnumItem: LookupsImportEnum.religion,
      },
    },
  },
  {
    label: 'marital-status',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 7,
        label: 'marital-status',
        valueSingle: 'marital-status',
        feature_name: TablesNameEnum.PersonnelMaritalStatuses.key,
        updateAPI: UpdateSetupsMaritalStatus,
        createAPI: CreateSetupsMaritalStatus,
        viewAPI: getSetupsMaritalStatusById,
        listAPI: GetAllSetupsMaritalStatus,
        deleteAPI: DeleteSetupsMaritalStatus,
        importEnumItem: LookupsImportEnum.personnel_marital_status,
      },
    },
  },
  {
    label: 'relative-types',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 8,
        label: 'relative-types',
        valueSingle: 'relative-type',
        feature_name: TablesNameEnum.RelativeType.key,
        updateAPI: UpdateSetupsRelativeTypes,
        createAPI: CreateSetupsRelativeTypes,
        viewAPI: getSetupsRelativeTypesById,
        listAPI: GetAllSetupsRelativeTypes,
        deleteAPI: DeleteSetupsRelativeType,
        importEnumItem: LookupsImportEnum.relative_type,
      },
    },
  },
  {
    label: 'asset-types',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 9,
        label: 'asset-types',
        valueSingle: 'asset-type',
        feature_name: TablesNameEnum.PersonnelAssets.key,
        updateAPI: UpdateSetupsAssetTypes,
        createAPI: CreateSetupsAssetTypes,
        viewAPI: getSetupsAssetTypesById,
        listAPI: GetAllSetupsAssetTypes,
        deleteAPI: DeleteSetupsAssetType,
        importEnumItem: LookupsImportEnum.personnel_asset,
      },
    },
  },
  {
    label: 'document-types',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 10,
        label: 'document-types',
        valueSingle: 'document-type',
        feature_name: TablesNameEnum.PersonnelDocumentTypes.key,
        updateAPI: UpdateSetupsDocumentTypes,
        createAPI: CreateSetupsDocumentTypes,
        viewAPI: getSetupsDocumentTypesById,
        listAPI: GetAllSetupsDocumentTypes,
        deleteAPI: DeleteSetupsDocumentType,
        importEnumItem: LookupsImportEnum.personnel_document_type,
      },
    },
  },
  {
    label: 'languages',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 11,
        label: 'languages',
        valueSingle: 'language',
        feature_name: TablesNameEnum.PersonnelLanguages.key,
        extraInputState: 'language_proficiency_code',
        extraInputTitle: 'language-symbol',
        extraInputPlaceholder: 'symbol',
        extraInputPattern: onlyEnglishSmall,
        updateAPI: UpdateSetupsLanguages,
        createAPI: CreateSetupsLanguages,
        viewAPI: getSetupsLanguagesById,
        listAPI: GetAllSetupsLanguages,
        deleteAPI: DeleteSetupsLanguage,
        importEnumItem: LookupsImportEnum.personnel_language,
      },
    },
  },
  {
    label: 'relationships',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 12,
        label: 'relationships',
        valueSingle: 'relationship',
        feature_name: TablesNameEnum.PersonnelRelationships.key,
        updateAPI: UpdateSetupsRelationships,
        createAPI: CreateSetupsRelationships,
        viewAPI: getSetupsRelationshipsById,
        listAPI: GetAllSetupsRelationships,
        deleteAPI: DeleteSetupsRelationship,
        importEnumItem: LookupsImportEnum.personnel_relationship,
      },
    },
  },

  {
    label: 'currencies',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 13,
        label: 'currencies',
        valueSingle: 'currency',
        feature_name: TablesNameEnum.Currency.key,
        extraInputState: 'value',
        extraInputMin: 0,
        extraInputTitle: 'exchange-value',
        extraInputType: 'number',
        // parentKey: 'country_uuid',
        // parentAPI: GetAllSetupsCountries,
        // parentByIdAPI: getSetupsCountriesById,
        // parentTitle: 'country',
        // titleKey: 'name',
        mainKey: 'title',
        updateAPI: UpdateSetupsCurrencies,
        createAPI: CreateSetupsCurrencies,
        viewAPI: GetSetupsCurrenciesById,
        listAPI: GetAllSetupsCurrencies,
        deleteAPI: DeleteSetupsCurrency,
        importEnumItem: LookupsImportEnum.currency,
      },
    },
  },
  {
    label: 'genders',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 14,
        label: 'genders',
        valueSingle: 'gender',
        feature_name: TablesNameEnum.Genders.key,
        updateAPI: UpdateSetupsGender,
        createAPI: CreateSetupsGender,
        viewAPI: getSetupsGenderById,
        listAPI: GetAllSetupsGender,
        deleteAPI: DeleteSetupsGender,
        importEnumItem: LookupsImportEnum.personnel_gender,
      },
    },
  },
  {
    label: 'citizenship',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 15,
        label: 'citizenship',
        valueSingle: 'citizenship',
        feature_name: TablesNameEnum.Citizenship.key,
        updateAPI: UpdateSetupsCitizenship,
        createAPI: CreateSetupsCitizenship,
        viewAPI: getSetupsCitizenshipById,
        listAPI: GetAllSetupsCitizenship,
        deleteAPI: DeleteSetupsCitizenship,
        importEnumItem: LookupsImportEnum.citizen_ship,
      },
    },
  },
  {
    label: 'priority',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 16,
        label: 'priority',
        valueSingle: 'priority',
        feature_name: TablesNameEnum.Priority.key,
        updateAPI: UpdateSetupsPriority,
        createAPI: CreateSetupsPriority,
        viewAPI: getSetupsPriorityById,
        listAPI: GetAllSetupsPriority,
        deleteAPI: DeleteSetupsPriority,
        importEnumItem: LookupsImportEnum.priority,
      },
    },
  },

  {
    label: 'blood-types',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 17,
        label: 'blood-types',
        valueSingle: 'blood-type',
        feature_name: TablesNameEnum.BloodTypes.key,
        updateAPI: UpdateSetupsBloodType,
        createAPI: CreateSetupsBloodType,
        viewAPI: GetSetupsBloodTypeById,
        listAPI: GetAllSetupsBloodType,
        deleteAPI: DeleteSetupsBloodType,
        importEnumItem: LookupsImportEnum.blood_type,
      },
    },
  },
  {
    label: 'disabilities',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 18,
        label: 'disabilities',
        valueSingle: 'disability',
        feature_name: TablesNameEnum.Disabilities.key,
        updateAPI: UpdateSetupsDisability,
        createAPI: CreateSetupsDisability,
        viewAPI: GetSetupsDisabilityById,
        listAPI: GetAllSetupsDisability,
        deleteAPI: DeleteSetupsDisability,
        importEnumItem: LookupsImportEnum.personnel_disability,
      },
    },
  },
  {
    label: 'students',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 19,
        label: 'students',
        valueSingle: 'student',
        feature_name: TablesNameEnum.Students.key,
        updateAPI: UpdateSetupsStudents,
        createAPI: CreateSetupsStudents,
        viewAPI: GetSetupsStudentsById,
        listAPI: GetAllSetupsStudents,
        deleteAPI: DeleteSetupsStudents,
        importEnumItem: LookupsImportEnum.student,
      },
    },
  },
  {
    label: 'HRDF',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 20,
        label: 'HRDF',
        valueSingle: 'HRDF',
        feature_name: TablesNameEnum.HRDF.key,
        updateAPI: UpdateSetupsHRDF,
        createAPI: CreateSetupsHRDF,
        viewAPI: GetSetupsHRDFById,
        listAPI: GetAllSetupsHRDF,
        deleteAPI: DeleteSetupsHRDF,
        importEnumItem: LookupsImportEnum.hrdf,
      },
    },
  },
  {
    label: 'probation-period',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 21,
        label: 'probation-period',
        valueSingle: 'probation-period',
        feature_name: TablesNameEnum.ProbationPeriod.key,
        updateAPI: UpdateSetupsProbationPeriod,
        createAPI: CreateSetupsProbationPeriod,
        viewAPI: GetSetupsProbationPeriodById,
        listAPI: GetAllSetupsProbationPeriod,
        deleteAPI: DeleteSetupsProbationPeriod,
        importEnumItem: LookupsImportEnum.probation_period,
      },
    },
  },
  {
    label: 'notice-period',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 22,
        label: 'notice-period',
        valueSingle: 'notice-period',
        feature_name: TablesNameEnum.NoticePeriod.key,
        updateAPI: UpdateSetupsNoticePeriod,
        createAPI: CreateSetupsNoticePeriod,
        viewAPI: GetSetupsNoticePeriodById,
        listAPI: GetAllSetupsNoticePeriod,
        deleteAPI: DeleteSetupsNoticePeriod,
        importEnumItem: LookupsImportEnum.notice_period,
      },
    },
  },
  {
    label: 'GOSI',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 23,
        label: 'GOSI',
        valueSingle: 'GOSI',
        feature_name: TablesNameEnum.GOSI.key,
        updateAPI: UpdateSetupsGOSI,
        createAPI: CreateSetupsGOSI,
        viewAPI: GetSetupsGOSIById,
        listAPI: GetAllSetupsGOSI,
        deleteAPI: DeleteSetupsGOSI,
        importEnumItem: LookupsImportEnum.gosi,
      },
    },
  },
  {
    label: 'annuities',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 24,
        label: 'annuities',
        valueSingle: 'annuity',
        feature_name: TablesNameEnum.Annuities.key,
        updateAPI: UpdateSetupsAnnuities,
        createAPI: CreateSetupsAnnuities,
        viewAPI: GetSetupsAnnuitiesById,
        listAPI: GetAllSetupsAnnuities,
        deleteAPI: DeleteSetupsAnnuities,
        importEnumItem: LookupsImportEnum.annuities,
      },
    },
  },
  {
    label: 'hazards',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 25,
        label: 'hazards',
        valueSingle: 'hazard',
        feature_name: TablesNameEnum.Hazards.key,
        updateAPI: UpdateSetupsHazards,
        createAPI: CreateSetupsHazards,
        viewAPI: GetSetupsHazardsById,
        listAPI: GetAllSetupsHazards,
        deleteAPI: DeleteSetupsHazards,
        importEnumItem: LookupsImportEnum.hazard,
      },
    },
  },
  {
    label: 'residency-status',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 26,
        label: 'residency-status',
        valueSingle: 'residency-status',
        feature_name: TablesNameEnum.ResidencyStatus.key,
        updateAPI: UpdateSetupsResidencyStatus,
        createAPI: CreateSetupsResidencyStatus,
        viewAPI: GetSetupsResidencyStatusById,
        listAPI: GetAllSetupsResidencyStatus,
        deleteAPI: DeleteSetupsResidencyStatus,
        importEnumItem: LookupsImportEnum.residency_status,
      },
    },
  },
  {
    label: 'salutations',
    component: LookupsComponent,
    props: {
      lookup: {
        key: 27,
        label: 'salutations',
        valueSingle: 'salutation',
        feature_name: TablesNameEnum.Salutation.key,
        updateAPI: UpdateSetupsSalutation,
        createAPI: CreateSetupsSalutation,
        viewAPI: GetSetupsSalutationById,
        listAPI: GetAllSetupsSalutation,
        deleteAPI: DeleteSetupsSalutation,
        importEnumItem: LookupsImportEnum.salutation,
      },
    },
  },
];
